# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
segmentItems:
  - serviceName: logger-log4j2-scenario
    segmentSize: 5
    segments:
      - segmentId: not null
        spans:
          - operationName: /log4j2/healthCheck
            operationId: 0
            parentSpanId: -1
            spanId: 0
            spanLayer: Http
            startTime: nq 0
            endTime: nq 0
            componentId: 1
            isError: false
            spanType: Entry
            peer: ''
            skipAnalysis: false
            tags:
              - {key: url, value: 'http://localhost:8080/log4j2/healthCheck'}
              - {key: http.method, value: HEAD}
      - segmentId: not null
        spans:
          - operationName: /log4j2/no-param
            operationId: 0
            parentSpanId: -1
            spanId: 0
            spanLayer: Http
            startTime: nq 0
            endTime: nq 0
            componentId: 1
            isError: false
            spanType: Entry
            peer: ''
            skipAnalysis: false
            tags:
              - {key: url, value: 'http://localhost:8080/log4j2/no-param'}
              - {key: http.method, value: GET}
            logs:
              - logEvent:
                  - {key: event, value: 'error'}
                  - {key: message, value: 'no-param'}
                  - {key: log.kind, value: 'org.apache.skywalking.apm.testcase.logger.controller.CaseController'}
            refs:
              - {parentEndpoint: /log4j2/testcase, networkAddress: 'localhost:8080', refType: CrossProcess,
                 parentSpanId: 1, parentTraceSegmentId: not null,
                 parentServiceInstance: not null, parentService: logger-log4j2-scenario,
                 traceId: not null}
      - segmentId: not null
        spans:
          - operationName: /log4j2/one-param
            operationId: 0
            parentSpanId: -1
            spanId: 0
            spanLayer: Http
            startTime: nq 0
            endTime: nq 0
            componentId: 1
            isError: false
            spanType: Entry
            peer: ''
            skipAnalysis: false
            tags:
              - {key: url, value: 'http://localhost:8080/log4j2/one-param'}
              - {key: http.method, value: GET}
            logs:
              - logEvent:
                  - {key: param.1, value: 'class org.apache.skywalking.apm.testcase.logger.controller.CaseController'}
                  - {key: event, value: 'error'}
                  - {key: message, value: 'one param is {}'}
                  - {key: log.kind, value: 'org.apache.skywalking.apm.testcase.logger.controller.CaseController'}
            refs:
              - {parentEndpoint: /log4j2/testcase, networkAddress: 'localhost:8080', refType: CrossProcess,
                 parentSpanId: 2, parentTraceSegmentId: not null,
                 parentServiceInstance: not null, parentService: logger-log4j2-scenario,
                 traceId: not null}
      - segmentId: not null
        spans:
          - operationName: /log4j2/marker
            operationId: 0
            parentSpanId: -1
            spanId: 0
            spanLayer: Http
            startTime: nq 0
            endTime: nq 0
            componentId: 1
            isError: false
            spanType: Entry
            peer: ''
            skipAnalysis: false
            tags:
              - {key: url, value: 'http://localhost:8080/log4j2/marker'}
              - {key: http.method, value: GET}
            logs:
              - logEvent:
                  - {key: event, value: 'error'}
                  - {key: message, value: 'test marker'}
                  - {key: log.kind, value: 'org.apache.skywalking.apm.testcase.logger.controller.CaseController'}
            refs:
              - {parentEndpoint: /log4j2/testcase, networkAddress: 'localhost:8080', refType: CrossProcess,
                 parentSpanId: 3, parentTraceSegmentId: not null,
                 parentServiceInstance: not null, parentService: logger-log4j2-scenario,
                 traceId: not null}
      - segmentId: not null
        spans:
          - operationName: /log4j2/no-param
            operationId: 0
            parentSpanId: 0
            spanId: 1
            spanLayer: Http
            startTime: nq 0
            endTime: nq 0
            componentId: 2
            isError: false
            spanType: Exit
            peer: localhost:8080
            skipAnalysis: false
            tags:
              - {key: url, value: 'http://localhost:8080/log4j2/no-param'}
              - {key: http.method, value: GET}
          - operationName: /log4j2/one-param
            operationId: 0
            parentSpanId: 0
            spanId: 2
            spanLayer: Http
            startTime: nq 0
            endTime: nq 0
            componentId: 2
            isError: false
            spanType: Exit
            peer: localhost:8080
            skipAnalysis: false
            tags:
              - {key: url, value: 'http://localhost:8080/log4j2/one-param'}
              - {key: http.method, value: GET}
          - operationName: /log4j2/marker
            operationId: 0
            parentSpanId: 0
            spanId: 3
            spanLayer: Http
            startTime: nq 0
            endTime: nq 0
            componentId: 2
            isError: false
            spanType: Exit
            peer: localhost:8080
            skipAnalysis: false
            tags:
              - {key: url, value: 'http://localhost:8080/log4j2/marker'}
              - {key: http.method, value: GET}
          - operationName: /log4j2/testcase
            operationId: 0
            parentSpanId: -1
            spanId: 0
            spanLayer: Http
            startTime: nq 0
            endTime: nq 0
            componentId: 1
            isError: false
            spanType: Entry
            peer: ''
            skipAnalysis: false
            tags:
              - {key: url, value: 'http://localhost:8080/log4j2/testcase'}
              - {key: http.method, value: GET}
